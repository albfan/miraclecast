#
# MiracleCast - Wifi-Display/Miracast Implementation
# Copyright (c) 2013-2014 David Herrmann <dh.herrmann@gmail.com>
#

#
# This is an example configuration for wpa_supplicant to work with miraclecast.
# You can modify it to your needs and then run wpa_supplicant *as root* on it.
# If you want to run it in foreground for debugging, you might wanna use:
#   ./wpa_supplicant -dd -iwlan0 -Dnl80211 -c wpa.conf
#
# wpa_supplicant is *not* spawned by miraclecast, you need to do that yourself
# and afterwards add the device as wifi-link to miraclecast via:
#   ./miraclectl add-link wifi:wlan0
#
# For debugging you usually want to connect a wpa_cli interface so you can
# follow the events and interact with wpas:
#   ./wpa_cli -iwlan0
#

# Directory where control-interface sockets are stored. Must not be changed!
ctrl_interface=/run/wpa_supplicant

# Allow manual AP scans
ap_scan=1

# Set default device-name. Overwritten by miraclecast with current hostname. If
# you want to change it, use "./miraclectl set-link-name <link> <name>"
device_name=my-device

# Device type for desktop systems. Usually better left untouched..
device_type=1-0050F204-1
driver_param=p2p_device=1

# Supported config-methods:
#     pbc: Supports Push-Button-Configuration
# display: Can display PINs
#   label: Has hard-coded label which can be used as PIN
#  keypad: Has keyboard for dynamic PIN input
#
# Usually PBC is the preferred method for short-lived ad-hoc connections like
# Miracast as it doesn't require any PIN input on either side. Unfortunately,
# not all devices support it so you might wanna fall back to "display" and
# "keypad".
# Note that wpas supports multiple options separated by spaces. But my remote
# devices tend to choose "keypad" then, which is annoying for testing so I just
# list pbc here as default.
config_methods=keypad display pin label pbc
