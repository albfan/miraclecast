/* Generated by vala-dbus-binding-tool 0.4.0. Do not modify! */
/* Generated with: /usr/bin/vala-dbus-binding-tool --gdbus --no-synced --rename-namespace=org:Org --rename-namespace=freedesktop:Freedesktop --rename-namespace=miracle:Miracle --rename-namespace=wifi:Wifi --rename-namespace=wfd:Wfd --api-path=/home/derekdai/Projects/miraclecast/demo/dbus */
using GLib;

namespace Org {

	namespace Freedesktop {

		namespace Miracle {

			namespace Wfd {

				[DBus (name = "org.freedesktop.miracle.wfd.Sink")]
				public interface Sink : GLib.Object {

					[DBus (name = "StartSession", timeout = 120000)]
					public abstract GLib.ObjectPath start_session(string param0, string param1, uint param2, uint param3, uint param4, uint param5, string param6) throws DBusError, IOError;

					[DBus (name = "Session", timeout = 120000)]
					public abstract GLib.ObjectPath session { owned get; }

					[DBus (name = "Peer", timeout = 120000)]
					public abstract GLib.ObjectPath peer { owned get; }
				}

				[DBus (name = "org.freedesktop.miracle.wfd.Session")]
				public interface Session : GLib.Object {

					[DBus (name = "Resume", timeout = 120000)]
					public abstract void resume() throws DBusError, IOError;

					[DBus (name = "Pause", timeout = 120000)]
					public abstract void pause() throws DBusError, IOError;

					[DBus (name = "Teardown", timeout = 120000)]
					public abstract void teardown() throws DBusError, IOError;

					[DBus (name = "Sink", timeout = 120000)]
					public abstract GLib.ObjectPath sink { owned get; }

					[DBus (name = "Url", timeout = 120000)]
					public abstract string url { owned get; }

					[DBus (name = "State", timeout = 120000)]
					public abstract int state {  get; }
				}
			}
		}
	}
}
